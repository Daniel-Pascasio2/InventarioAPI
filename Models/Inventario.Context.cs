//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventarioAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class inventario2e : DbContext
    {
        public inventario2e()
            : base("name=inventario2e")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cargos> cargos { get; set; }
        public virtual DbSet<departamentos> departamentos { get; set; }
        public virtual DbSet<empleados> empleados { get; set; }
        public virtual DbSet<encabezado_movimientos> encabezado_movimientos { get; set; }
        public virtual DbSet<equipos> equipos { get; set; }
        public virtual DbSet<marcas> marcas { get; set; }
        public virtual DbSet<modelos> modelos { get; set; }
        public virtual DbSet<movimientos_enquipos> movimientos_enquipos { get; set; }
        public virtual DbSet<programacion> programacion { get; set; }
        public virtual DbSet<usuarios> usuarios { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int editar_empleado(Nullable<int> idempleado, string nombre, string apellido, string telefono, string direccion, string dui, string nit, Nullable<int> id_cargo, Nullable<int> estado, Nullable<int> id_departamento)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var duiParameter = dui != null ?
                new ObjectParameter("dui", dui) :
                new ObjectParameter("dui", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_departamentoParameter = id_departamento.HasValue ?
                new ObjectParameter("id_departamento", id_departamento) :
                new ObjectParameter("id_departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editar_empleado", idempleadoParameter, nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, duiParameter, nitParameter, id_cargoParameter, estadoParameter, id_departamentoParameter);
        }
    
        public virtual int editar_equipos(Nullable<int> idequipo, Nullable<int> idprogramacion, Nullable<int> idmarca, Nullable<int> idmodelo, string codigo, Nullable<decimal> precio, Nullable<System.DateTime> fecha_cad, string tipo_equipo, Nullable<int> estado, Nullable<int> id_usuario, Nullable<System.DateTime> fecha_modificacion)
        {
            var idequipoParameter = idequipo.HasValue ?
                new ObjectParameter("idequipo", idequipo) :
                new ObjectParameter("idequipo", typeof(int));
    
            var idprogramacionParameter = idprogramacion.HasValue ?
                new ObjectParameter("idprogramacion", idprogramacion) :
                new ObjectParameter("idprogramacion", typeof(int));
    
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var fecha_cadParameter = fecha_cad.HasValue ?
                new ObjectParameter("fecha_cad", fecha_cad) :
                new ObjectParameter("fecha_cad", typeof(System.DateTime));
    
            var tipo_equipoParameter = tipo_equipo != null ?
                new ObjectParameter("tipo_equipo", tipo_equipo) :
                new ObjectParameter("tipo_equipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("fecha_modificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editar_equipos", idequipoParameter, idprogramacionParameter, idmarcaParameter, idmodeloParameter, codigoParameter, precioParameter, fecha_cadParameter, tipo_equipoParameter, estadoParameter, id_usuarioParameter, fecha_modificacionParameter);
        }
    
        public virtual int sp_AsignarEquipos(Nullable<int> id_equipo, Nullable<int> id_empleado, Nullable<int> id_encabezado, string descripcion, Nullable<int> id_departamento, Nullable<System.DateTime> fecha, Nullable<int> id_usuario, Nullable<int> estado)
        {
            var id_equipoParameter = id_equipo.HasValue ?
                new ObjectParameter("id_equipo", id_equipo) :
                new ObjectParameter("id_equipo", typeof(int));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var id_encabezadoParameter = id_encabezado.HasValue ?
                new ObjectParameter("id_encabezado", id_encabezado) :
                new ObjectParameter("id_encabezado", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var id_departamentoParameter = id_departamento.HasValue ?
                new ObjectParameter("id_departamento", id_departamento) :
                new ObjectParameter("id_departamento", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AsignarEquipos", id_equipoParameter, id_empleadoParameter, id_encabezadoParameter, descripcionParameter, id_departamentoParameter, fechaParameter, id_usuarioParameter, estadoParameter);
        }
    
        public virtual ObjectResult<sp_BuscarEmpleado_Result> sp_BuscarEmpleado(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarEmpleado_Result>("sp_BuscarEmpleado", textobuscarParameter);
        }
    
        public virtual ObjectResult<sp_mostrar_equipos_Result> sp_mostrar_equipos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mostrar_equipos_Result>("sp_mostrar_equipos");
        }
    
        public virtual int sp_RecepcionMov(Nullable<int> idmov, Nullable<int> ideq, Nullable<int> idemp, Nullable<int> idenc, string descrip, Nullable<int> iddep, Nullable<System.DateTime> fech, Nullable<int> idus)
        {
            var idmovParameter = idmov.HasValue ?
                new ObjectParameter("idmov", idmov) :
                new ObjectParameter("idmov", typeof(int));
    
            var ideqParameter = ideq.HasValue ?
                new ObjectParameter("ideq", ideq) :
                new ObjectParameter("ideq", typeof(int));
    
            var idempParameter = idemp.HasValue ?
                new ObjectParameter("idemp", idemp) :
                new ObjectParameter("idemp", typeof(int));
    
            var idencParameter = idenc.HasValue ?
                new ObjectParameter("idenc", idenc) :
                new ObjectParameter("idenc", typeof(int));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var iddepParameter = iddep.HasValue ?
                new ObjectParameter("iddep", iddep) :
                new ObjectParameter("iddep", typeof(int));
    
            var fechParameter = fech.HasValue ?
                new ObjectParameter("fech", fech) :
                new ObjectParameter("fech", typeof(System.DateTime));
    
            var idusParameter = idus.HasValue ?
                new ObjectParameter("idus", idus) :
                new ObjectParameter("idus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RecepcionMov", idmovParameter, ideqParameter, idempParameter, idencParameter, descripParameter, iddepParameter, fechParameter, idusParameter);
        }
    
        public virtual int sp_RecepcionMov2(Nullable<int> idmov, Nullable<int> ideq, Nullable<int> idemp, Nullable<int> idenc, string descrip, Nullable<int> iddep, Nullable<System.DateTime> fech, Nullable<int> idus)
        {
            var idmovParameter = idmov.HasValue ?
                new ObjectParameter("idmov", idmov) :
                new ObjectParameter("idmov", typeof(int));
    
            var ideqParameter = ideq.HasValue ?
                new ObjectParameter("ideq", ideq) :
                new ObjectParameter("ideq", typeof(int));
    
            var idempParameter = idemp.HasValue ?
                new ObjectParameter("idemp", idemp) :
                new ObjectParameter("idemp", typeof(int));
    
            var idencParameter = idenc.HasValue ?
                new ObjectParameter("idenc", idenc) :
                new ObjectParameter("idenc", typeof(int));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var iddepParameter = iddep.HasValue ?
                new ObjectParameter("iddep", iddep) :
                new ObjectParameter("iddep", typeof(int));
    
            var fechParameter = fech.HasValue ?
                new ObjectParameter("fech", fech) :
                new ObjectParameter("fech", typeof(System.DateTime));
    
            var idusParameter = idus.HasValue ?
                new ObjectParameter("idus", idus) :
                new ObjectParameter("idus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RecepcionMov2", idmovParameter, ideqParameter, idempParameter, idencParameter, descripParameter, iddepParameter, fechParameter, idusParameter);
        }
    
        public virtual ObjectResult<sp_reportEquipo_Result> sp_reportEquipo(string tipo, Nullable<int> id_marca, Nullable<int> id_modelo, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string departamento)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var id_marcaParameter = id_marca.HasValue ?
                new ObjectParameter("id_marca", id_marca) :
                new ObjectParameter("id_marca", typeof(int));
    
            var id_modeloParameter = id_modelo.HasValue ?
                new ObjectParameter("id_modelo", id_modelo) :
                new ObjectParameter("id_modelo", typeof(int));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reportEquipo_Result>("sp_reportEquipo", tipoParameter, id_marcaParameter, id_modeloParameter, fecha_iniParameter, fecha_finParameter, departamentoParameter);
        }
    
        public virtual ObjectResult<sp_reportProgra_Result> sp_reportProgra(string tipo, string marca, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string departamento)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reportProgra_Result>("sp_reportProgra", tipoParameter, marcaParameter, fecha_iniParameter, fecha_finParameter, departamentoParameter);
        }
    
        public virtual ObjectResult<spbuscar_empleado_nombre_Result> spbuscar_empleado_nombre(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_empleado_nombre_Result>("spbuscar_empleado_nombre", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_equipo_tipo_Result> spbuscar_equipo_tipo(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_equipo_tipo_Result>("spbuscar_equipo_tipo", textobuscarParameter);
        }
    
        public virtual int speliminar_empleado(Nullable<int> idempleado)
        {
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("idempleado", idempleado) :
                new ObjectParameter("idempleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_empleado", idempleadoParameter);
        }
    
        public virtual int speliminar_equipos(Nullable<int> idequipo)
        {
            var idequipoParameter = idequipo.HasValue ?
                new ObjectParameter("idequipo", idequipo) :
                new ObjectParameter("idequipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_equipos", idequipoParameter);
        }
    
        public virtual ObjectResult<string> spequipo_tipo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spequipo_tipo");
        }
    
        public virtual int spinsertar_empleado(ObjectParameter idempleado, string nombre, string apellido, string telefono, string direccion, string dui, string nit, Nullable<int> id_cargo, Nullable<int> estado, Nullable<int> id_departamento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var duiParameter = dui != null ?
                new ObjectParameter("dui", dui) :
                new ObjectParameter("dui", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_departamentoParameter = id_departamento.HasValue ?
                new ObjectParameter("id_departamento", id_departamento) :
                new ObjectParameter("id_departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_empleado", idempleado, nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, duiParameter, nitParameter, id_cargoParameter, estadoParameter, id_departamentoParameter);
        }
    
        public virtual int spinsertar_equipos(ObjectParameter idequipo, Nullable<int> idprogramacion, Nullable<int> idmarca, Nullable<int> idmodelo, string codigo, Nullable<decimal> precio, Nullable<System.DateTime> fecha_cad, string tipo_equipo, Nullable<int> estado, Nullable<int> id_usuario, Nullable<System.DateTime> fecha_modificacion)
        {
            var idprogramacionParameter = idprogramacion.HasValue ?
                new ObjectParameter("idprogramacion", idprogramacion) :
                new ObjectParameter("idprogramacion", typeof(int));
    
            var idmarcaParameter = idmarca.HasValue ?
                new ObjectParameter("idmarca", idmarca) :
                new ObjectParameter("idmarca", typeof(int));
    
            var idmodeloParameter = idmodelo.HasValue ?
                new ObjectParameter("idmodelo", idmodelo) :
                new ObjectParameter("idmodelo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var fecha_cadParameter = fecha_cad.HasValue ?
                new ObjectParameter("fecha_cad", fecha_cad) :
                new ObjectParameter("fecha_cad", typeof(System.DateTime));
    
            var tipo_equipoParameter = tipo_equipo != null ?
                new ObjectParameter("tipo_equipo", tipo_equipo) :
                new ObjectParameter("tipo_equipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("fecha_modificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_equipos", idequipo, idprogramacionParameter, idmarcaParameter, idmodeloParameter, codigoParameter, precioParameter, fecha_cadParameter, tipo_equipoParameter, estadoParameter, id_usuarioParameter, fecha_modificacionParameter);
        }
    
        public virtual ObjectResult<spllenado_equipo_Result> spllenado_equipo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spllenado_equipo_Result>("spllenado_equipo");
        }
    
        public virtual ObjectResult<spllenar_encMovimiento_Result> spllenar_encMovimiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spllenar_encMovimiento_Result>("spllenar_encMovimiento");
        }
    
        public virtual ObjectResult<spllenar_MostEmpleado_Result> spllenar_MostEmpleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spllenar_MostEmpleado_Result>("spllenar_MostEmpleado");
        }
    
        public virtual ObjectResult<splogin_Result> splogin(string correo, string clave)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<splogin_Result>("splogin", correoParameter, claveParameter);
        }
    
        public virtual ObjectResult<spmostrar_cargos_Result> spmostrar_cargos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_cargos_Result>("spmostrar_cargos");
        }
    
        public virtual ObjectResult<spmostrar_departamentos_Result> spmostrar_departamentos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_departamentos_Result>("spmostrar_departamentos");
        }
    
        public virtual ObjectResult<spmostrar_empleado_Result> spmostrar_empleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_empleado_Result>("spmostrar_empleado");
        }
    
        public virtual ObjectResult<spmostrar_marcas_Result> spmostrar_marcas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_marcas_Result>("spmostrar_marcas");
        }
    
        public virtual ObjectResult<spmostrar_modelos_Result> spmostrar_modelos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_modelos_Result>("spmostrar_modelos");
        }
    
        public virtual ObjectResult<spmostrar_modeloscb_Result> spmostrar_modeloscb(Nullable<int> id_marcas)
        {
            var id_marcasParameter = id_marcas.HasValue ?
                new ObjectParameter("id_marcas", id_marcas) :
                new ObjectParameter("id_marcas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_modeloscb_Result>("spmostrar_modeloscb", id_marcasParameter);
        }
    }
}
